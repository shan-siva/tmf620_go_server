/*
 * Product Catalog Management
 *
 * ## TMF API Reference: TMF620 - Product Catalog Management  ### Release : 20.5 - March 2021  Product Catalog API is one of Catalog Management API Family. Product Catalog API goal is to provide a catalog of products.   ### Operations Product Catalog API performs the following operations on the resources : - Retrieve an entity or a collection of entities depending on filter criteria - Partial update of an entity (including updating rules) - Create an entity (including default values and creation rules) - Delete an entity - Manage notification of events
 *
 * API version: 4.1.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

// An aggregation, migration, substitution, dependency or exclusivity relationship between/among productSpecificationCharacteristics.
type ProductSpecificationCharacteristicRelationship struct {

	// the identifier of the associated product specification
	Id string `json:"id,omitempty"`

	// Hyperlink reference to the target product specification
	Href string `json:"href,omitempty"`

	// The order in which a CharacteristicSpecification appears within another CharacteristicSpecification that defines a grouping of CharacteristicSpecifications.  For example, a grouping may represent the name of an individual. The given name is first, the middle name is second, and the last name is third.
	CharSpecSeq int32 `json:"charSpecSeq,omitempty"`

	// Name of the target product specification characteristic
	Name string `json:"name,omitempty"`

	// Type of relationship such as aggregation, migration, substitution, dependency, exclusivity
	RelationshipType string `json:"relationshipType,omitempty"`

	// The period for which the productSpecificationCharacteristicRelationship is valid
	ValidFor *TimePeriod `json:"validFor,omitempty"`

	// When sub-classing, this defines the super-class
	BaseType string `json:"@baseType,omitempty"`

	// A URI to a JSON-Schema file that defines additional attributes and relationships
	SchemaLocation string `json:"@schemaLocation,omitempty"`

	// When sub-classing, this defines the sub-class Extensible name
	Type_ string `json:"@type,omitempty"`
}
